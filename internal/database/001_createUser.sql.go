// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: 001_createUser.sql

package database

import (
	"context"
	"database/sql"
)

const createUser = `-- name: CreateUser :execresult
INSERT INTO users (id, firstName, lastName, email, password)
VALUES (?, ?, ?, ?, ?)
`

type CreateUserParams struct {
	ID        string
	Firstname sql.NullString
	Lastname  sql.NullString
	Email     string
	Password  string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, createUser,
		arg.ID,
		arg.Firstname,
		arg.Lastname,
		arg.Email,
		arg.Password,
	)
}

const getUser = `-- name: GetUser :one
SELECT id, firstname, lastname, email, password FROM users
WHERE email = ?
LIMIT 1
`

func (q *Queries) GetUser(ctx context.Context, email string) (User, error) {
	row := q.db.QueryRowContext(ctx, getUser, email)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Firstname,
		&i.Lastname,
		&i.Email,
		&i.Password,
	)
	return i, err
}
